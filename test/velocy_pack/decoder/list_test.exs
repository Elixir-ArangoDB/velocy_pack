defmodule VelocyPack.Decoder.ListTest do
  use ExUnit.Case, async: true

  test "decode() compact list" do
    foo = <<0x13, 0xc1, 0x01, 0x14, 0xbd, 0x01, 0x44, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x66, 0x6f, 0x6f, 0x49, 0x70, 0x61,
      0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x0a, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x65, 0xbf, 0x96, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x46, 0x4f, 0x52, 0x20, 0x62, 0x6c, 0x61, 0x68, 0x62, 0x6c, 0x61, 0x68, 0x62, 0x6c, 0x61,
      0x68, 0x20, 0x49, 0x4e, 0x20, 0x62, 0x6c, 0x61, 0x68, 0x62, 0x6c, 0x61, 0x68, 0x62, 0x6c, 0x61, 0x68, 0x73, 0x0a,
      0x20, 0x20, 0x20, 0x20, 0x46, 0x4f, 0x52, 0x20, 0x79, 0x61, 0x64, 0x64, 0x61, 0x79, 0x61, 0x64, 0x64, 0x61, 0x79,
      0x61, 0x64, 0x64, 0x61, 0x20, 0x49, 0x4e, 0x20, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x20, 0x79, 0x61,
      0x64, 0x64, 0x61, 0x79, 0x61, 0x64, 0x64, 0x61, 0x79, 0x61, 0x64, 0x64, 0x61, 0x73, 0x20, 0x69, 0x6e, 0x5f, 0x62,
      0x6c, 0x61, 0x68, 0x62, 0x6c, 0x61, 0x68, 0x62, 0x6c, 0x61, 0x68, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
      0x20, 0x20, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x20, 0x7b, 0x79, 0x61, 0x64, 0x64, 0x61, 0x79, 0x61, 0x64, 0x64,
      0x61, 0x79, 0x61, 0x64, 0x64, 0x61, 0x2c, 0x20, 0x62, 0x6c, 0x61, 0x68, 0x62, 0x6c, 0x61, 0x68, 0x62, 0x6c, 0x61,
      0x68, 0x7d, 0x03, 0x01>>

    list = [
      %{
        "name" => "foo",
        "parameter" => %{},
        "value" => "FOR blahblahblah IN blahblahblahs\n    FOR yaddayaddayadda IN OUTBOUND yaddayaddayaddas "
          <> "in_blahblahblahs\n        RETURN {yaddayaddayadda, blahblahblah}"
      }
    ]

    assert VelocyPack.decode(foo) == {:ok, list, ""}
  end
end
